# Load necessary libraries
library(ggplot2)
library(dplyr)
library(pscl)  # For McFadden's R-squared

# Load the dataset
breast_cancer_data <- read.csv("breast_cancer_data.csv")

# Convert Diagnosis to a factor
breast_cancer_data$Diagnosis <- as.factor(breast_cancer_data$Diagnosis)

# Define the user-defined function for boxplot
BoxplotPredictorOnTarget <- function(target, predictor) {
  ggplot(breast_cancer_data, aes_string(x = target, y = predictor)) +
    geom_boxplot(fill = "skyblue", alpha = 0.5) +
    labs(title = paste("Boxplot of", predictor, "by", target), x = target, y = predictor) +
    theme_test()
}

# Generate boxplots
BoxplotPredictorOnTarget("Diagnosis", "area_mean")
BoxplotPredictorOnTarget("Diagnosis", "area_se")
BoxplotPredictorOnTarget("Diagnosis", "texture_mean")

# Logistic Regression Models
model1 <- glm(Diagnosis ~ area_mean, data = breast_cancer_data, family = binomial)
model2 <- glm(Diagnosis ~ area_mean + area_se, data = breast_cancer_data, family = binomial)
model3 <- glm(Diagnosis ~ area_mean + area_se + texture_mean, data = breast_cancer_data, family = binomial)
model4 <- glm(Diagnosis ~ area_mean + area_se + texture_mean + concavity_worst, data = breast_cancer_data, family = binomial)
model5 <- glm(Diagnosis ~ area_mean + area_se + texture_mean + concavity_worst + concavity_mean, data = breast_cancer_data, family = binomial)

# Compute McFadden's R-squared for each model
r_squared <- function(model) {
  1 - (logLik(model)[1] / logLik(glm(Diagnosis ~ 1, data = breast_cancer_data, family = binomial))[1])
}

models <- list(model1, model2, model3, model4, model5)
names(models) <- c("Model 1", "Model 2", "Model 3", "Model 4", "Model 5")

r_squared_values <- sapply(models, r_squared)

# Display the R-squared values
r_squared_values

# Recommend the best model
best_model <- names(models)[which.max(r_squared_values)]
paste("The best model based on McFadden's R-squared is", best_model)
